async function p(r,n={}){let s={env:Object.assign(Object.create(globalThis),n.env||{},{abort(t,e,a,o){t=l(t>>>0),e=l(e>>>0),a=a>>>0,o=o>>>0,(()=>{throw Error(`${t} in ${e}:${a}:${o}`)})()},"console.log"(t){t=l(t>>>0),console.log(t)},"console.error"(t){t=l(t>>>0),console.error(t)},seed(){return Date.now()*Math.random()}})},{exports:i}=await WebAssembly.instantiate(r,s),u=i.memory||n.env.memory,y=Object.setPrototypeOf({run(t){t=w(t)||d(),i.run(t)}},i);function l(t){if(!t)return null;let e=t+new Uint32Array(u.buffer)[t-4>>>2]>>>1,a=new Uint16Array(u.buffer),o=t>>>1,c="";for(;e-o>1024;)c+=String.fromCharCode(...a.subarray(o,o+=1024));return c+String.fromCharCode(...a.subarray(o,e))}function w(t){if(t==null)return 0;let e=t.length,a=i.__new(e<<1,2)>>>0,o=new Uint16Array(u.buffer);for(let c=0;c<e;++c)o[(a>>>1)+c]=t.charCodeAt(c);return a}function d(){throw TypeError("value must not be null")}return y}var{memory:_,run:h}=await(async r=>p(await(async()=>{try{return await globalThis.WebAssembly.compileStreaming(globalThis.fetch(r))}catch{return globalThis.WebAssembly.compile(await(await import("node:fs/promises")).readFile(r))}})(),{}))(new URL("release.wasm",import.meta.url));async function f(r){let n;try{n=await globalThis.fetch(r).then(s=>s.text())}catch{n=await(await import("node:fs/promises")).readFile(r,"utf-8")}try{h(n)}catch(s){console.error(`Failed to run file ${r}: ${s}`)}}function g(r){h(r)}async function b(r){let n=null;if(typeof globalThis.prompt=="function")n=prompt(`${r} `);else{let i=(await import("node:readline/promises")).createInterface({input:process.stdin,output:process.stdout});n=await i.question(`${r} `),i.close()}return n}var A=()=>{let r;try{let n=new URLSearchParams(window.location.search);r=Array.from(n.values())}catch{r=process.argv,r=r.slice(2)}return r},P={hadError:!1};async function m(){let r=await b(">>");if(r==null||r===""||r===void 0){console.log(r);return}g(typeof r=="string"?r:""),P.hadError=!1,m().then(()=>{}).catch(n=>{throw n})}function S(){let r=A();try{r.length>1?console.log("It's too much args you should use one arg"):r.length===1?f(r[0]).then(()=>{}).catch(n=>{throw n}):m().then(()=>{}).catch(n=>{throw n})}catch(n){throw console.log("error"),n}}S();
